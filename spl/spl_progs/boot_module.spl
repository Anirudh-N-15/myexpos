breakpoint;

loadi (63,13); //Loading library
loadi (64,14);

loadi (4,17); //Loading Timer Interrupt
loadi (5,18);

loadi (65,7); //Loading INIT Program
loadi (66,8);

loadi (22,35); //Interrupt10 : Exit syscall
loadi (23,36);

loadi(2,15); //Exception Handler
loadi(3,16);

loadi(16,29); //Loading INT7 i.e Syscall for Write
loadi(17,30);

loadi(69,11); //Loading Idle Code
loadi(70,12);

loadi(54,67); //Loading the boot module i.e (module 7)
loadi(55,68);

PTBR = PAGE_TABLE_BASE + 20;
PTLR = 10 ;

//Library
[PTBR+0] = 63;
[PTBR+1] = "0100";
[PTBR+2] = 64;
[PTBR+3] = "0100";

//Heap
[PTBR+4] = 78;
[PTBR+5] = "0100";
[PTBR+6] = 79;
[PTBR+7] = "0100";

//Code
[PTBR+8] = 65;
[PTBR+9] = "0100";
[PTBR+10] = 66;
[PTBR+11] = "0100";
[PTBR+12] = -1;
[PTBR+13] = "0000";
[PTBR+14] = -1;
[PTBR+15] = "0000";

//Stack
[PTBR+16] = 76;
[PTBR+17] = "0110";
[PTBR+18] = 77;
[PTBR+19] = "0110";

[PROCESS_TABLE + 16 + 1] =1 ; //PID is 1 for init process
[PROCESS_TABLE + 16 + 4] = CREATED ; //As the first scheduled process is Idle code
[PROCESS_TABLE + 16 + 13] = 8*512 ; //Same because the Stack is residing in logical page 8 of virtual mem
[PROCESS_TABLE + 16 + 12] = 0 ; //KPTR value is set to 0 as always
[PROCESS_TABLE + 16 + 14] = PTBR ; //The current value of PTBR is set to PTBR + 20
[PROCESS_TABLE + 16 + 15] = 10 ; //As always 10(ABI convention)
[PROCESS_TABLE + 16 + 11] = 80 ; //Setting the user area page as 80

[76 * 512] = [65 * 512 + 1] ;

return;

